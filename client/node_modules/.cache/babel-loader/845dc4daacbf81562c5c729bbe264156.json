{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\julie\\\\Desktop\\\\Rice Class\\\\shop-shop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\julie\\\\Desktop\\\\Rice Class\\\\shop-shop\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{useReducer}from\"react\";import{UPDATE_PRODUCTS,UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY,ADD_TO_CART,ADD_MULTIPLE_TO_CART,REMOVE_FROM_CART,UPDATE_CART_QUANTITY,CLEAR_CART,TOGGLE_CART}from\"./actions\";export var reducer=function reducer(state,action){switch(action.type){// if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\ncase UPDATE_PRODUCTS:return _objectSpread(_objectSpread({},state),{},{products:_toConsumableArray(action.products)});// if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\ncase UPDATE_CATEGORIES:return _objectSpread(_objectSpread({},state),{},{categories:_toConsumableArray(action.categories)});case UPDATE_CURRENT_CATEGORY:return _objectSpread(_objectSpread({},state),{},{currentCategory:action.currentCategory});case ADD_TO_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:true,cart:[].concat(_toConsumableArray(state.cart),[action.product])});case ADD_MULTIPLE_TO_CART:return _objectSpread(_objectSpread({},state),{},{cart:[].concat(_toConsumableArray(state.cart),_toConsumableArray(action.products))});case REMOVE_FROM_CART:var newState=state.cart.filter(function(product){return product._id!==action._id;});return _objectSpread(_objectSpread({},state),{},{cartOpen:newState.length>0,cart:newState});case UPDATE_CART_QUANTITY:return _objectSpread(_objectSpread({},state),{},{cartOpen:true,cart:state.cart.map(function(product){if(action._id===product._id){product.purchaseQuantity=action.purchaseQuantity;}return product;})});case CLEAR_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:false,cart:[]});case TOGGLE_CART:return _objectSpread(_objectSpread({},state),{},{cartOpen:!state.cartOpen});default:return state;}};export function useProductReducer(initialState){return useReducer(reducer,initialState);}","map":{"version":3,"sources":["C:/Users/julie/Desktop/Rice Class/shop-shop/client/src/utils/reducers.js"],"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","TOGGLE_CART","reducer","state","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","_id","length","map","purchaseQuantity","useProductReducer","initialState"],"mappings":"+WAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,OACEC,eADF,CAEEC,iBAFF,CAGEC,uBAHF,CAIEC,WAJF,CAKEC,oBALF,CAMEC,gBANF,CAOEC,oBAPF,CAQEC,UARF,CASEC,WATF,KAUO,WAVP,CAYA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACxC,OAAQA,MAAM,CAACC,IAAf,EACE;AACA,IAAKZ,CAAAA,eAAL,CACE,sCACKU,KADL,MAEEG,QAAQ,oBAAMF,MAAM,CAACE,QAAb,CAFV,GAIF;AACA,IAAKZ,CAAAA,iBAAL,CACE,sCACKS,KADL,MAEEI,UAAU,oBAAMH,MAAM,CAACG,UAAb,CAFZ,GAIF,IAAKZ,CAAAA,uBAAL,CACE,sCACKQ,KADL,MAEEK,eAAe,CAAEJ,MAAM,CAACI,eAF1B,GAKF,IAAKZ,CAAAA,WAAL,CACE,sCACKO,KADL,MAEEM,QAAQ,CAAE,IAFZ,CAGEC,IAAI,8BAAMP,KAAK,CAACO,IAAZ,GAAkBN,MAAM,CAACO,OAAzB,EAHN,GAMF,IAAKd,CAAAA,oBAAL,CACE,sCACKM,KADL,MAEEO,IAAI,8BAAMP,KAAK,CAACO,IAAZ,qBAAqBN,MAAM,CAACE,QAA5B,EAFN,GAKF,IAAKR,CAAAA,gBAAL,CACE,GAAIc,CAAAA,QAAQ,CAAGT,KAAK,CAACO,IAAN,CAAWG,MAAX,CAAkB,SAACF,OAAD,CAAa,CAC5C,MAAOA,CAAAA,OAAO,CAACG,GAAR,GAAgBV,MAAM,CAACU,GAA9B,CACD,CAFc,CAAf,CAIA,sCACKX,KADL,MAEEM,QAAQ,CAAEG,QAAQ,CAACG,MAAT,CAAkB,CAF9B,CAGEL,IAAI,CAAEE,QAHR,GAMF,IAAKb,CAAAA,oBAAL,CACE,sCACKI,KADL,MAEEM,QAAQ,CAAE,IAFZ,CAGEC,IAAI,CAAEP,KAAK,CAACO,IAAN,CAAWM,GAAX,CAAe,SAACL,OAAD,CAAa,CAChC,GAAIP,MAAM,CAACU,GAAP,GAAeH,OAAO,CAACG,GAA3B,CAAgC,CAC9BH,OAAO,CAACM,gBAAR,CAA2Bb,MAAM,CAACa,gBAAlC,CACD,CACD,MAAON,CAAAA,OAAP,CACD,CALK,CAHR,GAWF,IAAKX,CAAAA,UAAL,CACE,sCACKG,KADL,MAEEM,QAAQ,CAAE,KAFZ,CAGEC,IAAI,CAAE,EAHR,GAMF,IAAKT,CAAAA,WAAL,CACE,sCACKE,KADL,MAEEM,QAAQ,CAAE,CAACN,KAAK,CAACM,QAFnB,GAKF,QACE,MAAON,CAAAA,KAAP,CArEJ,CAuED,CAxEM,CA0EP,MAAO,SAASe,CAAAA,iBAAT,CAA2BC,YAA3B,CAAyC,CAC9C,MAAO3B,CAAAA,UAAU,CAACU,OAAD,CAAUiB,YAAV,CAAjB,CACD","sourcesContent":["import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  ADD_TO_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART,\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter((product) => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map((product) => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity;\r\n          }\r\n          return product;\r\n        }),\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState);\r\n}"]},"metadata":{},"sourceType":"module"}